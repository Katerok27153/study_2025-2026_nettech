---
# Preamble

## Author
author:
  name: Верниковская Екатерина Андреевна
  degrees: DSc
  email: 11322361366@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6

## Title
title: Презентация по лабораторной работе №3
subtitle: Сетевые технологии
license: CC BY
date: 2025-22-09

## Generic options
lang: ru-RU
crossref:
  lof-title: Список иллюстраций
  lot-title: Список таблиц
  lol-title: Листинги

## Fonts 
mainfont: PT Serif 
romanfont: PT Serif 
sansfont: PT Sans 
monofont: PT Mono 
mainfontoptions: Ligatures=TeX 
romanfontoptions: Ligatures=TeX 
sansfontoptions: Ligatures=TeX,Scale=MatchLowercase 
monofontoptions: Scale=MatchLowercase,Scale=0.9

## Formats
format:
### Pdf output format
  beamer:
    toc: true
    toc-title: Содержание
    number-sections: true
    colorlinks: false
    toc-depth: 2
    slide_level: 2
    aspectratio: 169
    section-titles: true
    theme: metropolis
    themeoptions: progressbar=frametitle,sectionpage=progressbar,numbering=fraction
    pdf-engine: xelatex
    fontenc: T2A
#### Language
    babel-lang: russian
    babel-otherlangs: english

### Html output
  revealjs:
    transition: slide
    margin: 0.2
    smaller: false
    output-ext: html
    theme: beige
    logo: _resources/image/logo_rudn.png
---

# Вводная часть

## Цель работы

Целью данной работы является изучение посредством Wireshark кадров Ethernet, анализ PDU протоколов
транспортного и прикладного уровней стека TCP/IP.

# Выполнение лабораторной работы

## MAC-адресация

С помощью команды ifconfig вывели информацию о текущем сетевом соединении ([рис. @fig-001])

![Вывод команды ifconfig](image/лаба3_1.png){#fig-001 width=50%}

## Анализ кадров канального уровня в Wireshark

Установили Wireshark и настроили административные права для захвата пакетов. Затем в основном пользователе добавили себя в группу wireshark ([рис. @fig-002])

![Установка и настройка wireshark](image/лаба3_2.png){#fig-002 width=70%}

## Анализ кадров канального уровня в Wireshark

Запустили wireshark. Выбрали активный на нашем устройстве сетевой интерфейс и убедились что начался процесс захвата трафика ([рис. @fig-003])

![Интерфейс wireshark](image/лаба3_3.png){#fig-003 width=70%}

## Анализ кадров канального уровня в Wireshark
 
На устройстве в консоле определили с помощью команды ```route -n``` IP-адрес нашего устройства и шлюз по умолчанию (default gateway) ([рис. @fig-004])

![Определение IP-адреса шлюза](image/лаба3_4.png){#fig-004 width=70%}

## Анализ кадров канального уровня в Wireshark

На устройстве в консоли с помошью команды ```ping 10.139.255.122``` пропинговали шлюз по умолчанию ([рис. @fig-005])

![Пингование шлюза](image/лаба3_5.png){#fig-005 width=70%} 

## Анализ кадров канального уровня в Wireshark

В wireshark остановили захват трафика. И в строке фльтра прописали фильтр ```arp or icmp``` ([рис. @fig-006])

![Фильтр arp or icmp](image/лаба3_6.png){#fig-006 width=70%} 

## Анализ кадров канального уровня в Wireshark

Изучили эхо-запрос и эхо-ответ ICMP в программе Wireshark ([рис. @fig-007]), ([рис. @fig-008])
	
![Информация об эхо-запросе](image/лаба3_7.png){#fig-007 width=70%} 

## Анализ кадров канального уровня в Wireshark

![Информация об эхо-ответе](image/лаба3_8.png){#fig-008 width=70%} 

## Анализ кадров канального уровня в Wireshark

Изучили кадры данных протокоа ARP. Изучили данные в полях заголовка Ethernet II ([рис. @fig-009]):

![Информация кадра протокола ARP](image/лаба3_9.png){#fig-009 width=70%} 

## Анализ кадров канального уровня в Wireshark

Начали новый процесс захвата трафика в wireshark. На устройстве в консоле пропинговали известный адрес, ```ping yandex.ru``` ([рис. @fig-010])

![Пингование yandex.ru](image/лаба3_10.png){#fig-010 width=70%} 

## Анализ кадров канального уровня в Wireshark

В Wireshark остановили захваттрафика. Изучили запросы и ответы протоколов ARP и ICMP. Определили MAC-адреса источника и получателя, определили тип MAC-адресов ([рис. @fig-011])

![Изучение трафика между устройством и yandex.ru](image/лаба3_11.png){#fig-011 width=50%} 

## Анализ кадров канального уровня в Wireshark

Данные эхо-запроса: длина кадра - 98 байт, тип Ethernet - IPv4, MAC-адрес источника - c8:94:02:bd:7a:15, MAC-адрес получателя - ba:af:7c:a7:bd:fb ([рис. @fig-012])

![Эхо-запрос от yandex.ru](image/лаба3_12.png){#fig-012 width=70%} 

## Анализ кадров канального уровня в Wireshark

Данные эхо-ответа: длина кадра - 98 байт, тип Ethernet - IPv4, MAC-адрес источника - ba:af:7c:a7:bd:fb, MAC-адрес получателя - c8:94:02:bd:7a:15 ([рис. @fig-013])

![Эхо-ответ от yandex.ru](image/лаба3_13.png){#fig-013 width=70%} 

## Анализ протоколов транспортного уровня в Wireshark

На нашем устройстве в браузере перешли на сайт, работающий по протоколу HTTP (например, на сайт CERN http://info.cern.ch/) ([рис. @fig-014])

![Сайт CERN](image/лаба3_14.png){#fig-014 width=70%} 

## Анализ протоколов транспортного уровня в Wireshark

В Wireshark в строке фильтра указали ```http``` и проанализировалм информацию по протоколу TCP в случае запросов и ответов ([рис. @fig-015]). Кадры по протоколу HTTP уже больше (944,455, 401 и т.д. Кб). В поле MAC-адрес получателя также определён MAC-адрес шлюза

![Фильтрование трафика по протоколу HTTP](image/лаба3_15.png){#fig-015 width=70%}

## Анализ протоколов транспортного уровня в Wireshark

В Wireshark в строке фильтра указали ```dns``` и проанализировалм информацию по протоколу UDP в случае запросов и ответов ([рис. @fig-016]). Кадры меньше чем в HTTP (72, 155, 77 и т.д. Кб). Информация об отправителе и получателе такая же

## Анализ протоколов транспортного уровня в Wireshark

![Фильтрование трафика по протоколу UDP](image/лаба3_16.png){#fig-016 width=70%}

## Анализ протоколов транспортного уровня в Wireshark

В Wireshark в строке фильтра указали ```quic``` и проанализировалм информацию по протоколу quic в случае запросов и ответов ([рис. @fig-017]). В пакете QUIC задан большой размер кадров

![Фильтрование трафика по протоколу QUIC](image/лаба3_17.png){#fig-017 width=70%}

## Анализ handshake протокола TCP в Wireshark

В Wireshark проанализировали handshake протокола TCP ([рис. @fig-018]):

![handshake протокола TCP](image/лаба3_18.png){#fig-018 width=50%}

## Анализ handshake протокола TCP в Wireshark

В Wireshark в меню «Статистика» выбрали «График Потока» и посмотрели для TCP ([рис. @fig-019])

![График потока TCP пакетов](image/лаба3_19.png){#fig-019 width=50%}

# Подведение итогов

## Выводы

В ходе выполнения лабораторной работы №3 мы изучили посредством Wireshark кадры Ethernet, проанализировали PDU протоколы транспортного и прикладного уровней стека TCP/IP

## Список литературы

1. [Лаборатораня работа №3](https://esystem.rudn.ru/pluginfile.php/2858360/mod_resource/content/3/003-lab_datalink-layer-WSh.pdf)
